--
-- PostgreSQL database dump
--

-- Dumped from database version 17.0
-- Dumped by pg_dump version 17.0

SET statement_timeout = 0;
SET lock_timeout = 0;
SET idle_in_transaction_session_timeout = 0;
SET transaction_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SELECT pg_catalog.set_config('search_path', '', false);
SET check_function_bodies = false;
SET xmloption = content;
SET client_min_messages = warning;
SET row_security = off;

SET default_tablespace = '';

SET default_table_access_method = heap;

--
-- Name: auth_group; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.auth_group (
    id integer NOT NULL,
    name character varying(150) NOT NULL
);


ALTER TABLE public.auth_group OWNER TO postgres;

--
-- Name: auth_group_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.auth_group ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.auth_group_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: auth_group_permissions; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.auth_group_permissions (
    id bigint NOT NULL,
    group_id integer NOT NULL,
    permission_id integer NOT NULL
);


ALTER TABLE public.auth_group_permissions OWNER TO postgres;

--
-- Name: auth_group_permissions_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.auth_group_permissions ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.auth_group_permissions_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: auth_permission; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.auth_permission (
    id integer NOT NULL,
    name character varying(255) NOT NULL,
    content_type_id integer NOT NULL,
    codename character varying(100) NOT NULL
);


ALTER TABLE public.auth_permission OWNER TO postgres;

--
-- Name: auth_permission_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.auth_permission ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.auth_permission_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: blog_blogpost; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.blog_blogpost (
    id bigint NOT NULL,
    title character varying(200) NOT NULL,
    content text NOT NULL,
    preview_image character varying(100) NOT NULL,
    created_at timestamp with time zone NOT NULL,
    is_published boolean NOT NULL,
    views_count integer NOT NULL,
    owner_id bigint,
    CONSTRAINT blog_blogpost_views_count_check CHECK ((views_count >= 0))
);


ALTER TABLE public.blog_blogpost OWNER TO postgres;

--
-- Name: blog_blogpost_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.blog_blogpost ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.blog_blogpost_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: catalog_category; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.catalog_category (
    id bigint NOT NULL,
    name character varying(100) NOT NULL,
    description text
);


ALTER TABLE public.catalog_category OWNER TO postgres;

--
-- Name: catalog_category_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.catalog_category ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.catalog_category_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: catalog_contact; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.catalog_contact (
    id bigint NOT NULL,
    country character varying(100) NOT NULL,
    inn character varying(20) NOT NULL,
    address character varying(255) NOT NULL
);


ALTER TABLE public.catalog_contact OWNER TO postgres;

--
-- Name: catalog_contact_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.catalog_contact ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.catalog_contact_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: catalog_product; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.catalog_product (
    id bigint NOT NULL,
    name character varying(100) NOT NULL,
    description text,
    image character varying(100),
    price integer NOT NULL,
    created_at timestamp with time zone NOT NULL,
    updated_at timestamp with time zone NOT NULL,
    category_id bigint,
    owner_id bigint,
    views_counter integer NOT NULL,
    is_published boolean NOT NULL,
    CONSTRAINT catalog_product_views_counter_check CHECK ((views_counter >= 0))
);


ALTER TABLE public.catalog_product OWNER TO postgres;

--
-- Name: catalog_product_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.catalog_product ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.catalog_product_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: django_admin_log; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.django_admin_log (
    id integer NOT NULL,
    action_time timestamp with time zone NOT NULL,
    object_id text,
    object_repr character varying(200) NOT NULL,
    action_flag smallint NOT NULL,
    change_message text NOT NULL,
    content_type_id integer,
    user_id bigint NOT NULL,
    CONSTRAINT django_admin_log_action_flag_check CHECK ((action_flag >= 0))
);


ALTER TABLE public.django_admin_log OWNER TO postgres;

--
-- Name: django_admin_log_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.django_admin_log ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.django_admin_log_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: django_content_type; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.django_content_type (
    id integer NOT NULL,
    app_label character varying(100) NOT NULL,
    model character varying(100) NOT NULL
);


ALTER TABLE public.django_content_type OWNER TO postgres;

--
-- Name: django_content_type_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.django_content_type ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.django_content_type_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: django_migrations; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.django_migrations (
    id bigint NOT NULL,
    app character varying(255) NOT NULL,
    name character varying(255) NOT NULL,
    applied timestamp with time zone NOT NULL
);


ALTER TABLE public.django_migrations OWNER TO postgres;

--
-- Name: django_migrations_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.django_migrations ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.django_migrations_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: django_session; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.django_session (
    session_key character varying(40) NOT NULL,
    session_data text NOT NULL,
    expire_date timestamp with time zone NOT NULL
);


ALTER TABLE public.django_session OWNER TO postgres;

--
-- Name: newsletter_recipient; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.newsletter_recipient (
    id bigint NOT NULL,
    email character varying(254) NOT NULL,
    full_name character varying(255) NOT NULL,
    comment text NOT NULL
);


ALTER TABLE public.newsletter_recipient OWNER TO postgres;

--
-- Name: newsletter_recipient_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.newsletter_recipient ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.newsletter_recipient_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: users_user; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.users_user (
    id bigint NOT NULL,
    password character varying(128) NOT NULL,
    last_login timestamp with time zone,
    is_superuser boolean NOT NULL,
    first_name character varying(150) NOT NULL,
    last_name character varying(150) NOT NULL,
    is_staff boolean NOT NULL,
    is_active boolean NOT NULL,
    date_joined timestamp with time zone NOT NULL,
    email character varying(254) NOT NULL,
    avatar character varying(100),
    phone_number character varying(20),
    country character varying(100),
    token character varying(100)
);


ALTER TABLE public.users_user OWNER TO postgres;

--
-- Name: users_user_groups; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.users_user_groups (
    id bigint NOT NULL,
    user_id bigint NOT NULL,
    group_id integer NOT NULL
);


ALTER TABLE public.users_user_groups OWNER TO postgres;

--
-- Name: users_user_groups_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.users_user_groups ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.users_user_groups_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: users_user_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.users_user ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.users_user_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: users_user_user_permissions; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.users_user_user_permissions (
    id bigint NOT NULL,
    user_id bigint NOT NULL,
    permission_id integer NOT NULL
);


ALTER TABLE public.users_user_user_permissions OWNER TO postgres;

--
-- Name: users_user_user_permissions_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.users_user_user_permissions ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.users_user_user_permissions_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Data for Name: auth_group; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.auth_group (id, name) FROM stdin;
1	admin
3	content_manager
2	moderator
\.


--
-- Data for Name: auth_group_permissions; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.auth_group_permissions (id, group_id, permission_id) FROM stdin;
5	1	25
6	1	26
7	1	27
8	1	28
10	2	45
11	2	46
13	1	33
14	1	34
15	1	35
16	1	36
17	3	48
18	3	50
19	2	27
20	2	51
\.


--
-- Data for Name: auth_permission; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.auth_permission (id, name, content_type_id, codename) FROM stdin;
1	Can add log entry	1	add_logentry
2	Can change log entry	1	change_logentry
3	Can delete log entry	1	delete_logentry
4	Can view log entry	1	view_logentry
5	Can add permission	2	add_permission
6	Can change permission	2	change_permission
7	Can delete permission	2	delete_permission
8	Can view permission	2	view_permission
9	Can add group	3	add_group
10	Can change group	3	change_group
11	Can delete group	3	delete_group
12	Can view group	3	view_group
13	Can add content type	5	add_contenttype
14	Can change content type	5	change_contenttype
15	Can delete content type	5	delete_contenttype
16	Can view content type	5	view_contenttype
17	Can add session	6	add_session
18	Can change session	6	change_session
19	Can delete session	6	delete_session
20	Can view session	6	view_session
21	Can add Категория	7	add_category
22	Can change Категория	7	change_category
23	Can delete Категория	7	delete_category
24	Can view Категория	7	view_category
25	Can add Продукт	8	add_product
26	Can change Продукт	8	change_product
27	Can delete Продукт	8	delete_product
28	Can view Продукт	8	view_product
29	Can add Контакт	9	add_contact
30	Can change Контакт	9	change_contact
31	Can delete Контакт	9	delete_contact
32	Can view Контакт	9	view_contact
33	Can add blog post	10	add_blogpost
34	Can change blog post	10	change_blogpost
35	Can delete blog post	10	delete_blogpost
36	Can view blog post	10	view_blogpost
37	Can add Получатель рассылки	11	add_recipient
38	Can change Получатель рассылки	11	change_recipient
39	Can delete Получатель рассылки	11	delete_recipient
40	Can view Получатель рассылки	11	view_recipient
41	Can add Пользователь	12	add_user
42	Can change Пользователь	12	change_user
43	Can delete Пользователь	12	delete_user
44	Can view Пользователь	12	view_user
45	Can edit category	8	can_edit_category
46	Can edit description	8	can_edit_description
47	Can edit title	10	can_edit_title
48	Can edit content	10	can_edit_content
49	Can edit name	8	can_edit_name
50	Can edit is published	10	can_edit_is_published
51	Can unpublish product	8	can_unpublish_product
\.


--
-- Data for Name: blog_blogpost; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.blog_blogpost (id, title, content, preview_image, created_at, is_published, views_count, owner_id) FROM stdin;
25	«Мода проходит, стиль остаётся» (Коко Шанель)	Каждые несколько лет мода повторяется с небольшими изменениями. Новое это хорошо забытое старое.\r\n\r\nНе бойтесь выглядеть не модно. Важно найти одежду, отражающую характер, оставайтесь всегда собой!\r\n\r\nСтиль отражает внутреннее состояние и мироощущение человека, и всегда остаётся неизменным. Это самовыражение и уникальность. Выбирая свой стиль нужно прислушаться к себе.\r\n\r\nКлассические вещи всегда остаются актуальными, на них не влияют веяния моды. Эти базовые вещи должны быть в гардеробе у каждого человека. Разбавив такие вещи модными аксессуарами можно добиться определённого стиля в одежде.	blog/images/scale_1200_5.png	2025-01-29 20:10:35.438028+03	t	24	12
5	Пост	Текст поста	blog/images/172493054566d059f1ce5cd.jpg	2025-01-29 15:35:54.154693+03	f	0	\N
3	Новый пост	Новый пост о моде на весну 2025. Какие цвета будут в тренде. Какие аксессуары подобрать. Всё что нужно вы прочитаете в этом посте.	blog/images/ULICHNYY-I-GORODSKOY-STIL-ODEZHDY-3.webp	2025-01-27 17:40:19.314342+03	t	4	\N
1	Тренды весны 2025: что носить в этом сезоне?	Весна 2025 года приносит с собой новые тренды в мире моды, которые вдохновляют и радуют. В этом сезоне мы видим возвращение ярких цветов, смелых принтов и удобной одежды, которая сочетает стиль и комфорт.\r\n\r\n1. Яркие цвета \r\nВ этом сезоне не бойтесь выделяться! Яркие оттенки, такие как фуксия, лимонный и мятный, будут в центре внимания. Эти цвета отлично подойдут для создания весеннего образа.\r\n\r\n2. Смелые принты\r\nГеометрические узоры и цветочные мотивы будут популярны. Комбинируйте принты с однотонными элементами гардероба для создания гармоничного образа.\r\n\r\n3. Удобство и стиль\r\nОдежда свободного кроя остается на пике популярности. Удобные брюки и легкие блузки помогут вам чувствовать себя комфортно в любой ситуации.\r\n\r\n4. Аксессуары\r\nНе забывайте об аксессуарах! Большие серьги и яркие сумки добавят изюминку вашему образу, а обувь на платформе станет отличным выбором для весенних прогулок.\r\n\r\nВ этом сезоне мода предлагает нам свободу самовыражения. Будьте смелыми, экспериментируйте с цветами и стилями, и не бойтесь быть собой!	blog/images/600d9f730b5e742c52cc7550f24a5952_Jpxs4dS.jpg	2025-01-27 14:21:27.53373+03	t	3	\N
2	Стильные аксессуары в 2025 году	Как выяснилось из показов, прошедших в модных столицах мира, в предстоящем сезоне в украшениях будет доминировать максимализм и многослойность. Мода в одежде уходит в лаконичность и простоту, но аксессуары идут по другому пути. В тренде: крупные детали, яркие оттенки, сочетание несочетаемого и природные элементы. \r\n\r\nНосите женские аксессуары не только в деловых и вечерних образах, но и в уличных, повседневных и даже спортивных луках. Не бойтесь выходить за рамки: главный девиз нового сезона — все лучшее сразу.	blog/images/c_ZLVrrWu.jpg	2025-01-27 15:40:20.634011+03	t	4	\N
15	Спортивный стиль	Спортивный стиль надолго захватил любовь модников и не собирается сдавать свои позиции. Удобная, практичная одежда подходит не только для занятий спортом, но и для повседневной носки. Женщины больше не хотят ходить на  каблуках целый день, предпочитая им удобные кроссовки. Феминизм, который с каждым годом набирает обороты, пропагандирует личный комфорт и удобство, и похоже, что женщины во всем мире только рады этому.\r\n\r\nЗимой поклонницам комфортного стиля вовсе не обязательно отказываться от любимого спортивного костюма. Чтобы сочетание худи и джоггеров выглядело стильно и защищало от холода, к нему нужно правильно подобрать верхнюю одежду.	blog/images/original.jpg	2025-01-29 19:35:54.519472+03	t	1	\N
9	New Post	Content new posts		2025-01-29 17:16:02.926856+03	f	1	\N
8	Новый пост 2	Содержание нового поста		2025-01-29 17:12:49.995628+03	f	0	\N
7	Новый пост 2	Содержание нового поста		2025-01-29 17:03:54.789347+03	f	0	\N
6	Базовые вещи для осеннего сезона	Подготовку к холодному сезону рекомендуем начать с составления базовой капсулы, которая заметно упростит вашу жизнь и станет функциональной основой для смелых экспериментов с осенним стилем одежды.\r\n\r\nСложно представить базовый гардероб на осень для женщины без стильного пальто. В этот раз в списке главных модных трендов сезона оказалось короткое полупальто, но, если вы хотите, чтобы изделие безупречно вписалось в любой аутфит, отдайте предпочтение моделям прямого кроя и длины ниже колена. Носить классическое пальто можно с деловой, вечерней или casual одеждой, а чтобы образ смотрелся ярче и выразительнее, добавьте к нему акцентные осенние аксессуары в виде обуви, стильных сумок, перчаток и шапки.\r\n\r\nЕще один незаменимый элемент базового осеннего гардероба — прямые брюки. И хотя они считаются более формальной опцией, чем джинсы, брюки отлично вписываются не только в деловую, но и в повседневную капсулу женской осенней одежды. Лучше всего отдавать предпочтение моделям на высокой посадке, которая визуально удлиняет ноги и вытягивает силуэт. Следующий момент, на который важно обратить внимание, — длина: брюки, закрывающие щиколотку, не только смотрятся более элегантно, но и отлично сочетаются с любой обувью от кроссовок до лодочек на каблуке.\r\n\r\nМужской капсульный гардероб на осень невозможно представить без пальто. В новом сезоне актуальны как классические модели прямого кроя, которые можно сочетать в деловых аутфитах с прямыми брюками, строгими пиджаками и формальными рубашками, так и более объемные варианты. Последние отлично смотрятся с широкими джинсами, толстовками, свободными свитерами и спортивными брюками. Чтобы пальто подходило к любым образам, отдайте предпочтение нейтральным цветам одежды для осени — черному, серому, коричневому или темно-синему.\r\n\r\nЕще один важный элемент в базовой осенней коллекции одежды для мужчин — однотонный свитер. Он может быть как с высоким горлом, так и с круглым вырезом, слегка приталенным или свободным — выбор фасона остается за вами. Главное, на что нужно обратить внимание, — материал.	blog/images/172493054566d059f1ce5cd_SXjuYqt.jpg	2025-01-29 15:37:23.752446+03	t	15	\N
12	Какие стили одежды бывают и как найти свой	Стиль одежды — это целенаправленный подбор вещей и аксессуаров по цветам, силуэту и декору таким образом, чтобы соответствовать сложившимся представлениям о манере одеваться в определенной социальной группе. Проще говоря, это выбор одежды в соответствии с тем, как принято в той среде, к которой относит себя человек. Поэтому нередко субкультуры, связанные с отдельными направлениями в музыке или отрезками в истории, формируют собственный стиль одежды, чтобы адептов можно было легко идентифицировать. Стиль в одежде — это своеобразный код, по которому мы узнаем своих.	blog/images/347036724099617.jpeg	2025-01-29 19:23:37.073837+03	t	0	\N
10	Как развить вкус и найти свой стиль?	Безукоризненный внешний вид — это искусство. Чтобы так выглядеть, одних только вещей всемирно известных брендов, увы, недостаточно. Некоторым счастливчикам умение сочетать одежду как будто дано от рождения. А что делать остальным? Читать наши рекомендации!\r\n\r\nНаглядность — залог успеха. Вдохновляйтесь образами, которые вам по душе и фигуре. Фотосессии актёров, инстаграмы музыкантов и спортсменов, концепты от дизайнеров и готовые коллекции — всё, что нравится, можно скидывать в приложения типа Pocket и Pinterest. Позже можно будет с чувством, с толком, с расстановкой просмотреть найденное и понять, что из него станет материалом для работы над вашим внешним видом.	blog/images/oblozhka-1199kh577-_8_.jpg	2025-01-29 18:23:12.657024+03	t	16	\N
14	Деловой стиль	У компании может быть собственный деловой стиль, регламентирующий и цвета в одежде, и даже длину волос и ногтей. Если говорить об общем деловом стиле, то это строгий силуэт, неброский макияж, аккуратная обувь, минимум фривольности. Такой стиль в одежде не должен отвлекать окружающих от работы и позволяет всегда выглядеть опрятно и собранно.	blog/images/347037535798201.webp	2025-01-29 19:27:48.114538+03	t	0	\N
13	Стиль унисекс	Из названия понятно, что такая манера одеваться стирает все признаки пола. Часто его можно перепутать с минимализмом, потому что одежда в этом стиле не предполагает большого количества украшений или принтов. Она максимально универсальна — одну и ту же вещь может надеть как мужчина, так и женщина.	blog/images/347036726910832.webp	2025-01-29 19:24:51.78234+03	t	2	\N
16	Стильные и простые образы на каждый день	Чтобы выглядеть стильно каждый день, не обязательно тратить много времени. Вот несколько идей для простых и удобных образов:\r\nДжинсы + футболка\r\nПрямые джинсы, белая футболка и кроссовки — универсальный вариант на каждый день. Добавьте куртку или кардиган для завершения.\r\nСарафан + сандалии\r\nЛегкий сарафан идеально подойдет для теплой погоды. Дополните образ поясом или шарфом.\r\nСпортивный стиль\r\nЛеггинсы, худи и кроссовки — комфортно и модно. Отлично для прогулок или активного дня.\r\nЧерное и белое\r\nЧерные брюки, белая рубашка и лоферы создадут минималистичный и элегантный образ.\r\nТрикотажное платье\r\nУютное платье в сочетании с ботинками и кожаной курткой — стильный выбор для прохладной погоды.\r\nСовет\r\nСобирайте базовый гардероб, чтобы легко комбинировать вещи, и добавляйте аксессуары для разнообразия!	blog/images/347037565602591.webp	2025-01-29 19:40:09.346435+03	t	0	\N
19	Все стили одежды во Франции	Франция славится своим богатым разнообразием и стилем в одежде.	blog/images/emili-v-parizhe-kamil-obrazy-12.webp	2025-01-29 20:06:16.124372+03	t	1	\N
20	Мода – это вещи! Стиль – это характер!	В любую эпоху человек хочет соответствовать определённому статусу. Чтобы создать свой неповторимый стиль, необходимо знать актуальную моду. А на саму моду влияет много факторов. Например, стандарты женского тела и идеалы красоты.	blog/images/scale_1200.png	2025-01-29 20:07:03.32823+03	t	0	\N
21	Мода в 14 веке	Начинается история моды в 14 веке во Франции. Женщины из богатых слоёв населения стали носить головные уборы. Через некоторое время в моду вошли шёлк и бархат.	blog/images/scale_1200_1.png	2025-01-29 20:07:53.862857+03	t	1	\N
22	Мода в 15 веке	В 15 веке законодательницей стиля стала Венеция. Женщины сооружали на голове замысловатые причёски с добавлением шиньона, подвязывали их шарфами. Начали носить шлейфы и декольте.	blog/images/scale_1200_2.png	2025-01-29 20:08:36.703239+03	t	1	\N
18	Основная роль моды в современном направлении одежды	Шагать в ногу с модными тенденциями, значит, выглядеть стильно и оригинально. Однако порой Ее Величество предъявляет нереальные запросы, которые ни в какие рамки здравого смысла не входят. Фантастические образы, непрактичность, сочетание несочетаемого – все это порой повергает публику в шок. Однако есть и беспроигрышные варианты, при которых всегда будешь в тренде. Речь идет о проверенной временем классике. Понятно, что с течением времени и она видоизменяется. Никто не носит одежду, которую имели в своем гардеробе наши предки 100 лет назад.	blog/images/rol-mody-v-sovremennom-napravlenii-odezhdy-2.jpg	2025-01-29 20:04:30.259911+03	t	1	\N
24	Мода в 20 веке	В 20 веке появляются дома мод и дизайнеры, которые диктуют свои направления в моде. Эпоха длинных юбок и корсетов проходит. В пятидесятых годах женщины надевают брюки. Спустя двадцать лет появляются джинсы и раскрепощённый стиль в моде.	blog/images/scale_1200_4.png	2025-01-29 20:09:40.364459+03	t	9	\N
23	Мода в 16 веке	В 16 веке декольте сменяют поднятые воротники, в прошлом остаётся декольте. Женщины носят пышные юбки и пользуются парфюмом. Через некоторое время Франция снова берёт в свои руки модные тенденции. И все подражают француженкам.	blog/images/scale_1200_3.png	2025-01-29 20:09:04.633054+03	t	2	\N
17	Морская тематика гардероба	Сафари и милитари – удобные стили одежды, которые, в первую очередь, выражены характерной цветовой гаммой, в частности, бежевыми, коричневыми оттенками, цветом хаки.\r\n\r\nСродные стили одежды для женщин милитари и сафари – это прямые платья, свободные шорты и брюки, удлиненные рубашки, кожаные аксессуары.\r\n\r\nВ стиле милитари используется шнуровка, элементы военной формы, нашивки и накладные карманы, блестящая фурнитура. Как правило, вещи в стиле милитари имеют весьма сложный крой.\r\n\r\nЛюбительницам женственных образов придется по душе рустикальный стиль, который выражается простотой и легкостью деревенских платьев, сарафанов, рубашек с вышивкой, ажуром и другими декоративными элементами.\r\n\r\nБесспорно, не можем мы не упомянуть стиль гранж, которые в модных кулуарах называют бунтарским.\r\n\r\nИменно гранж наиболее ярко представляет уличный стиль, демонстрируя сочетание несочетаемого, к примеру, комбинацию клетки с цветочным и графическим узором, объемные юбки и блузы женственного, часто бесформенного кроя.	blog/images/Stili-odezhdy_4.webp	2025-01-29 20:03:08.554957+03	t	2	\N
11	Мода или стиль?	Можно быть модным, но не быть стильным. И наоборот — быть стильным, не следуя канонам моды. Да и не стоит ей слепо следовать, ведь она переменчива, как ветер. Недаром такой знаток моды, как Коко Шанель, говорила: «Мода проходит, а стиль остается».\r\n\r\nБеда многих молодых людей в том, что они стремятся во что бы то ни стало приобрести вещи из новых коллекций, не задумываясь, подойдет ли очередное ноу-хау дизайнеров к их типажу. Ведь, согласитесь, не может тот или иной покрой либо цвет идти абсолютно всем. Так зачем коверкать свою внешность в желании прослыть модником? Не лучше ли выделиться среди толпы индивидуальным стилем?\r\n\r\nИ еще не стоит надевать одежду, в которой вы чувствуете себя не в своей тарелке, и которая не подходит вам по размеру. Тогда даже самый шикарный туалет не будет смотреться.\r\n\r\nТем не менее, совсем забывать о трендах не стоит. Скажем, нынче в моде галстуки узкие и средней ширины, поэтому если вы наденете широкий галстук, можете испортить тщательно подобранный наряд.	blog/images/9f537d9ecde43ec64ae40c839a108c87.jpg	2025-01-29 19:20:29.077311+03	t	2	\N
\.


--
-- Data for Name: catalog_category; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.catalog_category (id, name, description) FROM stdin;
1	Обувь	Наша идеальная обувь сочетает в себе комфорт и стиль. Выберите из множества моделей ту, что подходит именно тебе.
2	Верхняя одежда	В нашем интернет-магазине представлена разнообразная коллекция верхней одежды для мужчин, женщин и детей. Мы предлагаем модели, которые обеспечивают не только защиту от непогоды, но и стильный внешний вид. Независимо от сезона, у нас есть идеальный вариант для вас!
3	Толстовки	Толстовки — это идеальный выбор для тех, кто ценит комфорт и стиль в повседневной одежде. В нашем интернет-магазине представлена разнообразная коллекция толстовок для мужчин, женщин и детей, которые подойдут для любого времени года. Удобные, практичные и модные — наши толстовки станут незаменимой частью вашего гардероба!
4	Брюки	Брюки — это незаменимый элемент гардероба, который подходит для различных случаев, от повседневной носки до деловых встреч. В нашем интернет-магазине вы найдете широкий ассортимент моделей для мужчин, женщин и детей, которые сочетают в себе стильный дизайн и высокое качество. Мы предлагаем брюки для любого сезона и стиля!
5	Головные уборы	Головные уборы имеют множество форм и стилей, от классических шляп до современных вязаных шапок. Они могут быть как функциональными, так и модными, добавляя изюминку в повседневный или праздничный наряд. Мы предлагаем разнообразие моделей, чтобы каждый мог найти что-то по своему вкусу.
6	Аксессуары	\N
\.


--
-- Data for Name: catalog_contact; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.catalog_contact (id, country, inn, address) FROM stdin;
1	Россия	1234567890	г. Москва, Примерная ул., д. 10, кв. 10, 100101
\.


--
-- Data for Name: catalog_product; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.catalog_product (id, name, description, image, price, created_at, updated_at, category_id, owner_id, views_counter, is_published) FROM stdin;
6	Джинсы	Свободный крой и заниженная линия шагового шва этих голубых джинсов отсылают к силуэту моделей 1990-х.	catalog/images/брюки2_EEjvDOC.png	39100	2025-01-14 16:38:28.418+03	2025-02-27 17:25:19.404144+03	4	12	30	t
2	Замшевые кеды	Кеды с кожаным подкладом и гибкой подошвой сшиты из замши. Задник и язычок декорированы контрастными вставками с логотипами марки, которым вторят вставки в виде литеры M по бокам.	catalog/images/кеды_1WhSTkg.png	39950	2025-01-14 16:22:42.271+03	2025-02-27 15:55:18.300888+03	1	\N	6	t
5	Хлопковое худи	Для пошива модели силуэта oversize использовали мягкий хлопковый футер с фактурной изнанкой. Материал хорошо пропускает воздух и сохраняет тепло при незначительном снижении температуры.	catalog/images/худи2_T12lpqa.png	188500	2025-01-14 16:36:54.6+03	2025-02-26 21:33:52.005068+03	3	\N	0	t
16	Сумка Medusa '95 small	Сумку Medusa '95 с леопардовым узором выполнили из телячьей кожи с коротким мехом, а для подкладки использовали кожу ягненка. Аксессуар с двумя внутренними карманами закрывается клапаном с магнитной кнопкой и перемычкой, украшенной эмблемой марки. В комплекте — регулируемый плечевой ремень.	catalog/images/сумка_oYWojdX.png	323000	2025-01-17 20:53:31.932047+03	2025-02-26 21:34:01.802787+03	\N	\N	0	t
15	Солнцезащитные очки	Солнцезащитные очки, напоминающие горнолыжную маску, изготовили из матового ацетата. Аксессуар с золотистыми петлями, украшенными литерой В, оснастили дымчатыми линзами, блокирующими ультрафиолет. Съемная накладка спереди защищает нос от солнечных лучей.	catalog/images/очки_2_i4q23l2.png	144000	2025-01-17 20:45:27.348404+03	2025-02-26 21:34:05.028482+03	6	\N	0	t
1	Хлопковое худи	Декорировано ярко-оранжевым логотипом спереди и на спинке. Изготовлено из плотного хлопка, что обеспечивает долговечность и комфорт.	catalog/images/худи_Leh6ZYC.png	66450	2025-01-14 16:19:44.097+03	2025-02-26 21:33:55.172015+03	3	\N	0	t
11	Солнцезащитные очки	Овальные градиентные линзы очков Logo на 100% защищают глаза от ультрафиолета. Оправа с двойным мостом выполнена из металла, а заушники – из прозрачного полимера. Роль акцента играют петли в виде логотипа.	catalog/images/очки_6kyKPvs.png	68450	2025-01-16 13:35:43.745363+03	2025-02-26 21:34:08.903415+03	6	\N	0	t
8	Кожаные ботильоны	Ботильоны с квадратным мысом сшили из глянцевой телячьей кожи. Пару на прямом каблуке средней высоты дополнили широкой накладкой, создающей асимметрию. Модель застегивается молнией сбоку.	catalog/images/ботильоны_F3TyUjC.png	170500	2025-01-14 16:41:48.566+03	2025-02-26 21:32:54.465176+03	1	\N	5	t
3	Хлопковые брюки	Утрированно свободные брюки сшили из мягкого хлопкового трикотажа. Плотный материал хорошо пропускает воздух, сохраняя оптимальный микроклимат, и не вытягивается со временем. Модель с широким эластичным поясом украсили вышитым логотипом в тон на накладном кармане сзади.	catalog/images/брюки_YtKaDsV.png	98050	2025-01-14 16:25:57.542+03	2025-02-26 21:33:48.891279+03	4	\N	0	t
7	Плащ	Для пошива бежевого двубортного тренча с отлетной кокеткой использовали прочную ткань из мягкого хлопка и шелковистого полиэстера, которая не промокает под небольшим дождем и почти не мнется.	catalog/images/плащ_iwxyS3A.png	92450	2025-01-14 16:39:59.375+03	2025-02-26 21:34:16.109146+03	2	\N	0	t
10	Панама	Нежный розовый цвет этой панамы словно позаимствовали у клубничного зефира. Для прохладной погоды модель с узкими покатыми полями адаптирует материал: ее выполнили из ворсистого текстиля, хорошо сохраняющего тепло. Высокую тулью декорировали логотипом, вышитым шелковистой нитью в тон.	catalog/images/панама_MC0J9EB.png	48100	2025-01-14 16:47:50.592+03	2025-02-26 21:34:18.726982+03	5	\N	0	t
9	Шерстяная шапка	Для создания белоснежной шапки бини использовали мягкую шерстяную пряжу. Материал поддерживает оптимальную температуру, поэтому в модели будет комфортно и в морозный день, и в оттепель. Аксессуар, связанный в технике английской резинки, легко адаптируется к форме головы.	catalog/images/шапка_g63O0Oa_Mf3pwRj_9oeacT2.png	84550	2025-01-14 16:45:08.951+03	2025-02-26 21:33:45.517699+03	5	\N	0	t
18	Хлопковая футболка	Футболку с винтажным принтом Balmain Lips сшили из органического хлопка джерси. Модель составит монохромный черно-белый образ, но подружится и с вещами в других оттенках.	catalog/images/футболка_OHIScKI.png	53400	2025-01-17 20:59:19.358997+03	2025-02-26 21:33:58.569904+03	\N	\N	0	t
12	Пуховик	В черном пуховике будет комфортно в мороз до -25 градусов. Для пошива стеганой куртки использовали стрейчевый нейлон с дышащей мембраной, который не продувается ветром и отталкивает влагу. Слой отборного пуха с добавлением пера хорошо согревает, а капюшон защищает от холода шею и голову. С внутренней стороны изделие дополнили молнией так, что модель можно свернуть и носить за спиной как рюкзак.	catalog/images/пуховик_eHIfNaw.png	92550	2025-01-17 20:12:18.04578+03	2025-02-26 21:34:12.34113+03	2	\N	0	t
\.


--
-- Data for Name: django_admin_log; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.django_admin_log (id, action_time, object_id, object_repr, action_flag, change_message, content_type_id, user_id) FROM stdin;
1	2025-02-26 13:23:31.395114+03	1	admin	1	[{"added": {}}]	3	11
2	2025-02-26 13:23:36.793335+03	1	admin	2	[]	3	11
3	2025-02-26 13:30:45.057055+03	10	test_django@rambler.ru	2	[{"changed": {"fields": ["Groups"]}}]	12	11
4	2025-02-26 13:59:42.81349+03	25	«Мода проходит, стиль остаётся» (Коко Шанель)	2	[{"changed": {"fields": ["Content"]}}]	10	11
5	2025-02-26 13:59:47.957055+03	25	«Мода проходит, стиль остаётся» (Коко Шанель)	2	[{"changed": {"fields": ["Content"]}}]	10	11
6	2025-02-26 14:04:32.88656+03	2	moderator	1	[{"added": {}}]	3	11
7	2025-02-26 14:05:55.120376+03	1	admin	2	[{"changed": {"fields": ["Permissions"]}}]	3	11
8	2025-02-26 14:06:02.403+03	2	moderator	2	[{"changed": {"fields": ["Permissions"]}}]	3	11
9	2025-02-26 14:11:05.716611+03	25	«Мода проходит, стиль остаётся» (Коко Шанель)	2	[{"changed": {"fields": ["Content"]}}]	10	11
10	2025-02-26 14:11:33.683013+03	25	«Мода проходит, стиль остаётся» (Коко Шанель)	2	[{"changed": {"fields": ["Content"]}}]	10	11
11	2025-02-26 14:13:33.772051+03	25	«Мода проходит, стиль остаётся» (Коко Шанель)	2	[{"changed": {"fields": ["Content"]}}]	10	11
12	2025-02-26 14:13:49.925449+03	25	«Мода проходит, стиль остаётся» (Коко Шанель)	2	[{"changed": {"fields": ["Content"]}}]	10	11
13	2025-02-26 18:27:15.923201+03	6	Джинсы	2	[{"changed": {"fields": ["\\u0412\\u043b\\u0430\\u0434\\u0435\\u043b\\u0435\\u0446"]}}]	8	11
14	2025-02-26 18:40:30.946936+03	12	admin@sky.com	2	[{"changed": {"fields": ["Groups"]}}]	12	11
15	2025-02-26 19:09:09.937874+03	6	Джинсы	2	[]	8	11
16	2025-02-26 19:32:07.780474+03	1	admin	2	[{"changed": {"fields": ["Permissions"]}}]	3	11
17	2025-02-26 19:36:19.350599+03	3	content_manager	1	[{"added": {}}]	3	11
18	2025-02-26 20:17:44.179804+03	10	test_django@rambler.ru	2	[{"changed": {"fields": ["Groups"]}}]	12	11
19	2025-02-26 20:26:26.966481+03	25	«Мода проходит, стиль остаётся» (Коко Шанель)	2	[{"changed": {"fields": ["\\u0412\\u043b\\u0430\\u0434\\u0435\\u043b\\u0435\\u0446"]}}]	10	11
20	2025-02-26 20:28:33.040925+03	11	admin@example.com	2	[{"changed": {"fields": ["Groups"]}}]	12	11
21	2025-02-26 20:30:25.897531+03	13	anonim@mail.ru	1	[{"added": {}}]	12	11
22	2025-02-26 20:33:56.620521+03	13	anonim@mail.ru	3		12	11
23	2025-02-26 21:24:48.934274+03	2	moderator	2	[{"changed": {"fields": ["Permissions"]}}]	3	11
24	2025-02-26 21:32:36.852113+03	6	Джинсы	2	[{"changed": {"fields": ["Is published"]}}]	8	11
25	2025-02-26 21:32:45.595667+03	2	Замшевые кеды	2	[{"changed": {"fields": ["Is published"]}}]	8	11
26	2025-02-26 21:32:54.46576+03	8	Кожаные ботильоны	2	[{"changed": {"fields": ["Is published"]}}]	8	11
27	2025-02-26 21:32:58.87528+03	10	Панама	2	[{"changed": {"fields": ["Is published"]}}]	8	11
28	2025-02-26 21:33:45.51831+03	9	Шерстяная шапка	2	[{"changed": {"fields": ["Is published"]}}]	8	11
29	2025-02-26 21:33:48.891868+03	3	Хлопковые брюки	2	[{"changed": {"fields": ["Is published"]}}]	8	11
30	2025-02-26 21:33:52.005611+03	5	Хлопковое худи	2	[{"changed": {"fields": ["Is published"]}}]	8	11
31	2025-02-26 21:33:55.17259+03	1	Хлопковое худи	2	[{"changed": {"fields": ["Is published"]}}]	8	11
32	2025-02-26 21:33:58.570479+03	18	Хлопковая футболка	2	[{"changed": {"fields": ["Is published"]}}]	8	11
33	2025-02-26 21:34:01.803393+03	16	Сумка Medusa '95 small	2	[{"changed": {"fields": ["Is published"]}}]	8	11
34	2025-02-26 21:34:05.029092+03	15	Солнцезащитные очки	2	[{"changed": {"fields": ["Is published"]}}]	8	11
35	2025-02-26 21:34:08.903981+03	11	Солнцезащитные очки	2	[{"changed": {"fields": ["Is published"]}}]	8	11
36	2025-02-26 21:34:12.341924+03	12	Пуховик	2	[{"changed": {"fields": ["Is published"]}}]	8	11
37	2025-02-26 21:34:16.109725+03	7	Плащ	2	[{"changed": {"fields": ["Is published"]}}]	8	11
38	2025-02-26 21:34:18.727538+03	10	Панама	2	[]	8	11
39	2025-02-26 21:34:21.934946+03	6	Джинсы	2	[{"changed": {"fields": ["Is published"]}}]	8	11
40	2025-02-26 21:40:36.303322+03	6	Джинсы	2	[{"changed": {"fields": ["Is published"]}}]	8	11
41	2025-02-26 21:54:05.251145+03	6	Джинсы	2	[{"changed": {"fields": ["Is published"]}}]	8	11
42	2025-02-27 15:56:14.786781+03	6	Джинсы	2	[{"changed": {"fields": ["Is published"]}}]	8	11
43	2025-02-27 16:07:19.382827+03	6	Джинсы	2	[{"changed": {"fields": ["Is published", "\\u0421\\u0447\\u0435\\u0442\\u0447\\u0438\\u043a \\u043f\\u0440\\u043e\\u0441\\u043c\\u043e\\u0442\\u0440\\u043e\\u0432"]}}]	8	11
44	2025-02-27 16:07:29.558305+03	6	Джинсы	2	[]	8	11
45	2025-02-27 16:14:51.465478+03	6	Джинсы	2	[{"changed": {"fields": ["Is published"]}}]	8	11
46	2025-02-27 16:19:31.907063+03	6	Джинсы	2	[]	8	11
47	2025-02-27 16:19:58.617955+03	6	Джинсы	2	[{"changed": {"fields": ["Is published"]}}]	8	11
48	2025-02-27 16:20:49.713919+03	6	Джинсы	2	[]	8	11
49	2025-02-27 16:23:55.81706+03	6	Джинсы	2	[]	8	11
50	2025-02-27 16:48:29.922747+03	6	Джинсы	2	[{"changed": {"fields": ["Is published"]}}]	8	11
51	2025-02-27 16:53:21.812737+03	6	Джинсы	2	[{"changed": {"fields": ["Is published"]}}]	8	11
\.


--
-- Data for Name: django_content_type; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.django_content_type (id, app_label, model) FROM stdin;
1	admin	logentry
2	auth	permission
3	auth	group
4	auth	user
5	contenttypes	contenttype
6	sessions	session
7	catalog	category
8	catalog	product
9	catalog	contact
10	blog	blogpost
11	newsletter	recipient
12	users	user
\.


--
-- Data for Name: django_migrations; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.django_migrations (id, app, name, applied) FROM stdin;
1	contenttypes	0001_initial	2025-01-14 15:26:15.439623+03
6	contenttypes	0002_remove_content_type_name	2025-01-14 15:26:15.496898+03
18	catalog	0001_initial	2025-01-14 15:26:15.543345+03
19	sessions	0001_initial	2025-01-14 15:26:15.547074+03
20	catalog	0002_contact	2025-01-15 19:05:19.997831+03
21	blog	0001_initial	2025-01-22 18:07:02.79828+03
22	blog	0002_alter_blogpost_preview_image	2025-01-27 14:46:08.783058+03
23	blog	0003_alter_blogpost_preview_image	2025-01-27 14:47:04.910736+03
24	newsletter	0001_initial	2025-02-20 16:47:59.642946+03
25	auth	0001_initial	2025-02-24 12:58:25.60848+03
26	auth	0002_alter_permission_name_max_length	2025-02-24 12:58:25.612975+03
27	auth	0003_alter_user_email_max_length	2025-02-24 12:58:25.615617+03
28	auth	0004_alter_user_username_opts	2025-02-24 12:58:25.618083+03
29	auth	0005_alter_user_last_login_null	2025-02-24 12:58:25.620335+03
30	auth	0006_require_contenttypes_0002	2025-02-24 12:58:25.620916+03
31	auth	0007_alter_validators_add_error_messages	2025-02-24 12:58:25.623442+03
32	auth	0008_alter_user_username_max_length	2025-02-24 12:58:25.625772+03
33	auth	0009_alter_user_last_name_max_length	2025-02-24 12:58:25.628159+03
34	auth	0010_alter_group_name_max_length	2025-02-24 12:58:25.631988+03
35	auth	0011_update_proxy_permissions	2025-02-24 12:58:25.635782+03
36	auth	0012_alter_user_first_name_max_length	2025-02-24 12:58:25.638082+03
37	users	0001_initial	2025-02-24 12:58:25.656225+03
38	admin	0001_initial	2025-02-24 12:58:25.666518+03
39	admin	0002_logentry_remove_auto_add	2025-02-24 12:58:25.670276+03
40	admin	0003_logentry_add_action_flag_choices	2025-02-24 12:58:25.673719+03
41	blog	0004_alter_blogpost_preview_image_and_more	2025-02-24 12:58:25.677063+03
42	newsletter	0002_alter_recipient_full_name	2025-02-24 12:58:25.678492+03
43	users	0002_user_token	2025-02-24 18:57:30.124841+03
44	catalog	0003_product_owner	2025-02-25 14:56:23.149727+03
45	catalog	0004_remove_product_owner	2025-02-25 15:01:30.132739+03
46	blog	0005_alter_blogpost_options	2025-02-26 13:51:06.604689+03
47	catalog	0005_alter_product_options	2025-02-26 13:51:06.609306+03
48	blog	0006_alter_blogpost_options	2025-02-26 14:07:26.222387+03
49	blog	0007_alter_blogpost_options	2025-02-26 17:49:16.53681+03
50	catalog	0006_product_owner	2025-02-26 17:49:16.565986+03
51	catalog	0007_alter_product_options_product_views_counter	2025-02-26 19:15:43.230095+03
52	blog	0008_alter_blogpost_options	2025-02-26 19:35:00.334891+03
53	catalog	0008_alter_product_options	2025-02-26 19:35:00.344438+03
54	blog	0009_blogpost_owner	2025-02-26 19:51:19.441621+03
55	blog	0010_alter_blogpost_views_count	2025-02-26 20:02:56.01353+03
56	catalog	0009_alter_product_options_product_is_published	2025-02-26 21:05:32.661952+03
\.


--
-- Data for Name: django_session; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.django_session (session_key, session_data, expire_date) FROM stdin;
7zek789ekpn4v0elkbnifiuojb6fta5g	.eJxVjEsOAiEQBe_C2pABmk-7dO8ZJkA3Mmogmc_KeHedZBa6fVX1XmKM21rHbeF5nEichRKn3y3F_OC2A7rHdusy97bOU5K7Ig-6yGsnfl4O9--gxqV-a5uctghGFR0KeWDtgBAp2IR6CMxMxVjjc7ZWYxoSFQCGYpR3CA7F-wPSRzds:1tYN00:gYHipayJq6kUSekdUk04wGblIX12AY9yvETonzZbZuY	2025-01-30 13:21:16.424423+03
vb4arwr65d0q9q2u4x3nd6tkqzw2u7dl	.eJxVjEsOAiEQBe_C2pABmk-7dO8ZJkA3Mmogmc_KeHedZBa6fVX1XmKM21rHbeF5nEichRKn3y3F_OC2A7rHdusy97bOU5K7Ig-6yGsnfl4O9--gxqV-a5uctghGFR0KeWDtgBAp2IR6CMxMxVjjc7ZWYxoSFQCGYpR3CA7F-wPSRzds:1tYh4z:PLter5dw7hkA_gGo6JNuFRsURt94AKHYOSrzMbBCqSU	2025-01-31 10:47:45.179557+03
11oqsaj582jqyoeo6c3qlg9fp6eqz4lp	.eJxVjEsOAiEQBe_C2pABmk-7dO8ZJkA3Mmogmc_KeHedZBa6fVX1XmKM21rHbeF5nEichRKn3y3F_OC2A7rHdusy97bOU5K7Ig-6yGsnfl4O9--gxqV-a5uctghGFR0KeWDtgBAp2IR6CMxMxVjjc7ZWYxoSFQCGYpR3CA7F-wPSRzds:1tcM7U:buwupGXG4cBEQE7K_OAkKq3H6C8INLrEjW2qIpMlnpM	2025-02-10 13:13:28.866795+03
ro6m93xc1kyfrmnju00uydmkim7tryrc	.eJxVjEsOAiEQBe_C2pABmk-7dO8ZJkA3Mmogmc_KeHedZBa6fVX1XmKM21rHbeF5nEichRKn3y3F_OC2A7rHdusy97bOU5K7Ig-6yGsnfl4O9--gxqV-a5uctghGFR0KeWDtgBAp2IR6CMxMxVjjc7ZWYxoSFQCGYpR3CA7F-wPSRzds:1td3ag:Q3t7-1z4btNN49ZaPjIlHJnz6257v19TR_MHeNGSQMY	2025-02-12 11:38:30.928915+03
7j08gjiq1f2femr4upbolb4uelgxljp6	.eJxVjEsOAiEQBe_C2pABmk-7dO8ZJkA3Mmogmc_KeHedZBa6fVX1XmKM21rHbeF5nEichRKn3y3F_OC2A7rHdusy97bOU5K7Ig-6yGsnfl4O9--gxqV-a5uctghGFR0KeWDtgBAp2IR6CMxMxVjjc7ZWYxoSFQCGYpR3CA7F-wPSRzds:1tdPLu:OfLm5VcYroTV-U6f0Ed2gxUlu4pB3sHD9v84DJvJmXY	2025-02-13 10:52:42.649788+03
rmhmkz0s3q6hgsenxqbzth7wkd5blmcs	.eJxVjEsOAiEQBe_C2pABmk-7dO8ZJkA3Mmogmc_KeHedZBa6fVX1XmKM21rHbeF5nEichRKn3y3F_OC2A7rHdusy97bOU5K7Ig-6yGsnfl4O9--gxqV-a5uctghGFR0KeWDtgBAp2IR6CMxMxVjjc7ZWYxoSFQCGYpR3CA7F-wPSRzds:1tl7Be:ctv1Kq6h8rnwLzxtB4-akLj61B6R9yl9A5iqq6JqGIU	2025-03-06 17:05:58.168488+03
bxz64ibbptazxuy8iifhspfqnt3fmg12	.eJxVjMsOwiAQRf-FtSG8y7h07zeQAQapGkhKuzL-uzbpQrf3nHNfLOC21rANWsKc2ZlJyU6_Y8T0oLaTfMd26zz1ti5z5LvCDzr4tWd6Xg7376DiqN9a25wKgoGUIinhpTJghUOjLZDHiSzpomEiJ7QvSjlBgopQhB6UccTeHwFvN7I:1tndQs:teoeTI-CnVFJPNZUB4aPRv-8EQh9l5Eg2IJw8pum5rc	2025-03-13 15:56:06.233759+03
\.


--
-- Data for Name: newsletter_recipient; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.newsletter_recipient (id, email, full_name, comment) FROM stdin;
\.


--
-- Data for Name: users_user; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.users_user (id, password, last_login, is_superuser, first_name, last_name, is_staff, is_active, date_joined, email, avatar, phone_number, country, token) FROM stdin;
10	pbkdf2_sha256$600000$gXl7WOFOOaLQ4wipd9X6FJ$leCIMVEMV6oXOnONK85Rk4k00I5DW50k/RoOn1RxHgM=	2025-02-26 20:16:16+03	f			f	t	2025-02-25 14:30:55+03	test_django@rambler.ru		\N	\N	7b67de46cdd1550e31d60fedff841458
14	pbkdf2_sha256$600000$DNxx9Is9UUHDCH11MqU5CY$Hk0Fyg56XwtTDDgbSAb+Iy61ECJhd0RbdYEsNpi/nNQ=	2025-02-26 20:35:50.681177+03	f			f	t	2025-02-26 20:34:36.34747+03	anonim@mail.ru		\N	\N	\N
12	pbkdf2_sha256$600000$B5yplAzCP0EegfTXnJtmUo$HD22UeCCtex2SmVhDMO7BlGfz19EBjpWPy+Rv7lH96Y=	2025-02-26 21:21:27.03869+03	f			f	t	2025-02-26 18:11:44+03	admin@sky.com		\N	\N	\N
11	pbkdf2_sha256$600000$x6o3kkKDemr5Be1MCgpndb$sHtp0PChNYj76oijX0po4/vdTEfovd12VKIP1QPfm3o=	2025-02-27 15:56:06.232604+03	t			t	t	2025-02-26 13:20:41+03	admin@example.com		\N	\N	\N
\.


--
-- Data for Name: users_user_groups; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.users_user_groups (id, user_id, group_id) FROM stdin;
2	12	2
3	10	3
4	11	1
\.


--
-- Data for Name: users_user_user_permissions; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.users_user_user_permissions (id, user_id, permission_id) FROM stdin;
\.


--
-- Name: auth_group_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.auth_group_id_seq', 3, true);


--
-- Name: auth_group_permissions_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.auth_group_permissions_id_seq', 20, true);


--
-- Name: auth_permission_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.auth_permission_id_seq', 51, true);


--
-- Name: blog_blogpost_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.blog_blogpost_id_seq', 26, true);


--
-- Name: catalog_category_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.catalog_category_id_seq', 6, true);


--
-- Name: catalog_contact_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.catalog_contact_id_seq', 1, true);


--
-- Name: catalog_product_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.catalog_product_id_seq', 19, true);


--
-- Name: django_admin_log_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.django_admin_log_id_seq', 51, true);


--
-- Name: django_content_type_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.django_content_type_id_seq', 12, true);


--
-- Name: django_migrations_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.django_migrations_id_seq', 56, true);


--
-- Name: newsletter_recipient_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.newsletter_recipient_id_seq', 1, false);


--
-- Name: users_user_groups_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.users_user_groups_id_seq', 4, true);


--
-- Name: users_user_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.users_user_id_seq', 14, true);


--
-- Name: users_user_user_permissions_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.users_user_user_permissions_id_seq', 1, false);


--
-- Name: auth_group auth_group_name_key; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.auth_group
    ADD CONSTRAINT auth_group_name_key UNIQUE (name);


--
-- Name: auth_group_permissions auth_group_permissions_group_id_permission_id_0cd325b0_uniq; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.auth_group_permissions
    ADD CONSTRAINT auth_group_permissions_group_id_permission_id_0cd325b0_uniq UNIQUE (group_id, permission_id);


--
-- Name: auth_group_permissions auth_group_permissions_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.auth_group_permissions
    ADD CONSTRAINT auth_group_permissions_pkey PRIMARY KEY (id);


--
-- Name: auth_group auth_group_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.auth_group
    ADD CONSTRAINT auth_group_pkey PRIMARY KEY (id);


--
-- Name: auth_permission auth_permission_content_type_id_codename_01ab375a_uniq; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.auth_permission
    ADD CONSTRAINT auth_permission_content_type_id_codename_01ab375a_uniq UNIQUE (content_type_id, codename);


--
-- Name: auth_permission auth_permission_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.auth_permission
    ADD CONSTRAINT auth_permission_pkey PRIMARY KEY (id);


--
-- Name: blog_blogpost blog_blogpost_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.blog_blogpost
    ADD CONSTRAINT blog_blogpost_pkey PRIMARY KEY (id);


--
-- Name: catalog_category catalog_category_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.catalog_category
    ADD CONSTRAINT catalog_category_pkey PRIMARY KEY (id);


--
-- Name: catalog_contact catalog_contact_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.catalog_contact
    ADD CONSTRAINT catalog_contact_pkey PRIMARY KEY (id);


--
-- Name: catalog_product catalog_product_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.catalog_product
    ADD CONSTRAINT catalog_product_pkey PRIMARY KEY (id);


--
-- Name: django_admin_log django_admin_log_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.django_admin_log
    ADD CONSTRAINT django_admin_log_pkey PRIMARY KEY (id);


--
-- Name: django_content_type django_content_type_app_label_model_76bd3d3b_uniq; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.django_content_type
    ADD CONSTRAINT django_content_type_app_label_model_76bd3d3b_uniq UNIQUE (app_label, model);


--
-- Name: django_content_type django_content_type_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.django_content_type
    ADD CONSTRAINT django_content_type_pkey PRIMARY KEY (id);


--
-- Name: django_migrations django_migrations_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.django_migrations
    ADD CONSTRAINT django_migrations_pkey PRIMARY KEY (id);


--
-- Name: django_session django_session_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.django_session
    ADD CONSTRAINT django_session_pkey PRIMARY KEY (session_key);


--
-- Name: newsletter_recipient newsletter_recipient_email_key; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.newsletter_recipient
    ADD CONSTRAINT newsletter_recipient_email_key UNIQUE (email);


--
-- Name: newsletter_recipient newsletter_recipient_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.newsletter_recipient
    ADD CONSTRAINT newsletter_recipient_pkey PRIMARY KEY (id);


--
-- Name: users_user users_user_email_key; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.users_user
    ADD CONSTRAINT users_user_email_key UNIQUE (email);


--
-- Name: users_user_groups users_user_groups_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.users_user_groups
    ADD CONSTRAINT users_user_groups_pkey PRIMARY KEY (id);


--
-- Name: users_user_groups users_user_groups_user_id_group_id_b88eab82_uniq; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.users_user_groups
    ADD CONSTRAINT users_user_groups_user_id_group_id_b88eab82_uniq UNIQUE (user_id, group_id);


--
-- Name: users_user users_user_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.users_user
    ADD CONSTRAINT users_user_pkey PRIMARY KEY (id);


--
-- Name: users_user_user_permissions users_user_user_permissions_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.users_user_user_permissions
    ADD CONSTRAINT users_user_user_permissions_pkey PRIMARY KEY (id);


--
-- Name: users_user_user_permissions users_user_user_permissions_user_id_permission_id_43338c45_uniq; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.users_user_user_permissions
    ADD CONSTRAINT users_user_user_permissions_user_id_permission_id_43338c45_uniq UNIQUE (user_id, permission_id);


--
-- Name: auth_group_name_a6ea08ec_like; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX auth_group_name_a6ea08ec_like ON public.auth_group USING btree (name varchar_pattern_ops);


--
-- Name: auth_group_permissions_group_id_b120cbf9; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX auth_group_permissions_group_id_b120cbf9 ON public.auth_group_permissions USING btree (group_id);


--
-- Name: auth_group_permissions_permission_id_84c5c92e; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX auth_group_permissions_permission_id_84c5c92e ON public.auth_group_permissions USING btree (permission_id);


--
-- Name: auth_permission_content_type_id_2f476e4b; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX auth_permission_content_type_id_2f476e4b ON public.auth_permission USING btree (content_type_id);


--
-- Name: blog_blogpost_owner_id_7a37599a; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX blog_blogpost_owner_id_7a37599a ON public.blog_blogpost USING btree (owner_id);


--
-- Name: catalog_product_category_id_35bf920b; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX catalog_product_category_id_35bf920b ON public.catalog_product USING btree (category_id);


--
-- Name: catalog_product_owner_id_3142d196; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX catalog_product_owner_id_3142d196 ON public.catalog_product USING btree (owner_id);


--
-- Name: django_admin_log_content_type_id_c4bce8eb; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX django_admin_log_content_type_id_c4bce8eb ON public.django_admin_log USING btree (content_type_id);


--
-- Name: django_admin_log_user_id_c564eba6; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX django_admin_log_user_id_c564eba6 ON public.django_admin_log USING btree (user_id);


--
-- Name: django_session_expire_date_a5c62663; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX django_session_expire_date_a5c62663 ON public.django_session USING btree (expire_date);


--
-- Name: django_session_session_key_c0390e0f_like; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX django_session_session_key_c0390e0f_like ON public.django_session USING btree (session_key varchar_pattern_ops);


--
-- Name: newsletter_recipient_email_af4744c6_like; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX newsletter_recipient_email_af4744c6_like ON public.newsletter_recipient USING btree (email varchar_pattern_ops);


--
-- Name: users_user_email_243f6e77_like; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX users_user_email_243f6e77_like ON public.users_user USING btree (email varchar_pattern_ops);


--
-- Name: users_user_groups_group_id_9afc8d0e; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX users_user_groups_group_id_9afc8d0e ON public.users_user_groups USING btree (group_id);


--
-- Name: users_user_groups_user_id_5f6f5a90; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX users_user_groups_user_id_5f6f5a90 ON public.users_user_groups USING btree (user_id);


--
-- Name: users_user_user_permissions_permission_id_0b93982e; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX users_user_user_permissions_permission_id_0b93982e ON public.users_user_user_permissions USING btree (permission_id);


--
-- Name: users_user_user_permissions_user_id_20aca447; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX users_user_user_permissions_user_id_20aca447 ON public.users_user_user_permissions USING btree (user_id);


--
-- Name: auth_group_permissions auth_group_permissio_permission_id_84c5c92e_fk_auth_perm; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.auth_group_permissions
    ADD CONSTRAINT auth_group_permissio_permission_id_84c5c92e_fk_auth_perm FOREIGN KEY (permission_id) REFERENCES public.auth_permission(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: auth_group_permissions auth_group_permissions_group_id_b120cbf9_fk_auth_group_id; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.auth_group_permissions
    ADD CONSTRAINT auth_group_permissions_group_id_b120cbf9_fk_auth_group_id FOREIGN KEY (group_id) REFERENCES public.auth_group(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: auth_permission auth_permission_content_type_id_2f476e4b_fk_django_co; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.auth_permission
    ADD CONSTRAINT auth_permission_content_type_id_2f476e4b_fk_django_co FOREIGN KEY (content_type_id) REFERENCES public.django_content_type(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: blog_blogpost blog_blogpost_owner_id_7a37599a_fk_users_user_id; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.blog_blogpost
    ADD CONSTRAINT blog_blogpost_owner_id_7a37599a_fk_users_user_id FOREIGN KEY (owner_id) REFERENCES public.users_user(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: catalog_product catalog_product_category_id_35bf920b_fk_catalog_category_id; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.catalog_product
    ADD CONSTRAINT catalog_product_category_id_35bf920b_fk_catalog_category_id FOREIGN KEY (category_id) REFERENCES public.catalog_category(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: catalog_product catalog_product_owner_id_3142d196_fk_users_user_id; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.catalog_product
    ADD CONSTRAINT catalog_product_owner_id_3142d196_fk_users_user_id FOREIGN KEY (owner_id) REFERENCES public.users_user(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: django_admin_log django_admin_log_content_type_id_c4bce8eb_fk_django_co; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.django_admin_log
    ADD CONSTRAINT django_admin_log_content_type_id_c4bce8eb_fk_django_co FOREIGN KEY (content_type_id) REFERENCES public.django_content_type(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: django_admin_log django_admin_log_user_id_c564eba6_fk_users_user_id; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.django_admin_log
    ADD CONSTRAINT django_admin_log_user_id_c564eba6_fk_users_user_id FOREIGN KEY (user_id) REFERENCES public.users_user(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: users_user_groups users_user_groups_group_id_9afc8d0e_fk_auth_group_id; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.users_user_groups
    ADD CONSTRAINT users_user_groups_group_id_9afc8d0e_fk_auth_group_id FOREIGN KEY (group_id) REFERENCES public.auth_group(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: users_user_groups users_user_groups_user_id_5f6f5a90_fk_users_user_id; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.users_user_groups
    ADD CONSTRAINT users_user_groups_user_id_5f6f5a90_fk_users_user_id FOREIGN KEY (user_id) REFERENCES public.users_user(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: users_user_user_permissions users_user_user_perm_permission_id_0b93982e_fk_auth_perm; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.users_user_user_permissions
    ADD CONSTRAINT users_user_user_perm_permission_id_0b93982e_fk_auth_perm FOREIGN KEY (permission_id) REFERENCES public.auth_permission(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: users_user_user_permissions users_user_user_permissions_user_id_20aca447_fk_users_user_id; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.users_user_user_permissions
    ADD CONSTRAINT users_user_user_permissions_user_id_20aca447_fk_users_user_id FOREIGN KEY (user_id) REFERENCES public.users_user(id) DEFERRABLE INITIALLY DEFERRED;


--
-- PostgreSQL database dump complete
--

